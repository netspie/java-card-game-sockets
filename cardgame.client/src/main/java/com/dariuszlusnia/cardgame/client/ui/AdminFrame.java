/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.dariuszlusnia.cardgame.client.ui;

import com.dariuszlusnia.cardgame.client.common.MessageType;
import com.dariuszlusnia.cardgame.client.common.RequestProcessor;
import com.dariuszlusnia.cardgame.client.StoredCard;
import java.awt.FlowLayout;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.util.List;
import javax.swing.BoxLayout;

/**
 *
 * @author dariu
 */
public class AdminFrame extends javax.swing.JFrame {

    private RequestProcessor processor;
    private List<StoredCard> cards;
            
    private int currentCardIndex = 0;
    
    /**
     * Creates new form AdminFrame
     */
    public AdminFrame() {
        initComponents();
        this.dataPanel.setVisible(false);
    }

    public void init(RequestProcessor processor) {
        this.processor = processor;
        fetchDataAndRefreshView();
    }
    
    private void fetchDataAndRefreshView() {
        this.processor.write(MessageType.GET_CARDS);
        var data = this.processor.readData();
        
        this.cards = StoredCard.arrayFromString(data);
        
        refreshView();
    }
    
    private void refreshView() {
        this.actionResultLabel.setText("");
                
        if (this.cards.size() == 0) {
            this.dataPanel.setVisible(false);
            this.noCardsLabel.setVisible(true);
            this.cardsCounterLabel.setVisible(false);
            
            this.addCardButton.setVisible(true);
            this.removeButton.setVisible(false);
            this.nextButton.setVisible(false);
            this.prevButton.setVisible(false);
            
            return;
        } 
        
        this.dataPanel.setVisible(true);
        this.noCardsLabel.setVisible(false);

        ClampCurrentCardIndex();
        var currentCardIndex = this.currentCardIndex + 1;
        this.cardsCounterLabel.setText(String.valueOf(currentCardIndex) + " / " + String.valueOf(this.cards.size()));
        this.cardsCounterLabel.setVisible(true);

        this.removeButton.setVisible(true);
        
        this.nextButton.setVisible(this.currentCardIndex != this.cards.size() - 1);
        this.prevButton.setVisible(this.currentCardIndex != 0);
        
        var card = this.cards.get(this.currentCardIndex);
        this.nameTF.setText(card.Name());
        this.attackTF.setText(String.valueOf(card.Attack()));
        this.speedTF.setText(String.valueOf(card.Speed()));
        this.healthTF.setText(String.valueOf(card.Health()));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signOutButton = new javax.swing.JButton();
        addCardButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        cardsCounterLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        dataPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        attackLabel = new javax.swing.JLabel();
        speedLabel = new javax.swing.JLabel();
        healthLabel = new javax.swing.JLabel();
        attackTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        speedTF = new javax.swing.JTextField();
        healthTF = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        actionResultLabel = new javax.swing.JLabel();
        noCardsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signOutButton.setText("Sign Out");
        signOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutButtonActionPerformed(evt);
            }
        });

        addCardButton.setText("Add");
        addCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCardButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        titleLabel.setText("Cards");
        titleLabel.setPreferredSize(new java.awt.Dimension(40, 30));

        cardsCounterLabel.setText("0 / 0");

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        prevButton.setText("Prev");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        nameLabel.setText("Name");

        attackLabel.setText("Attack");

        speedLabel.setText("Speed");

        healthLabel.setText("Health");

        attackTF.setText("5");
        attackTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackTFActionPerformed(evt);
            }
        });

        nameTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        nameTF.setText("New Card");
        nameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTFActionPerformed(evt);
            }
        });

        speedTF.setText("5");
        speedTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedTFActionPerformed(evt);
            }
        });

        healthTF.setText("5");
        healthTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healthTFActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        actionResultLabel.setText("---");

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(attackLabel)
                            .addComponent(healthLabel)
                            .addComponent(speedLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(attackTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, Short.MAX_VALUE)
                                .addComponent(speedTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addComponent(healthTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(actionResultLabel)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)))
                .addContainerGap())
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attackTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attackLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speedTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healthTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(healthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(actionResultLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        noCardsLabel.setText("--- No Cards --- ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addCardButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeButton)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(prevButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextButton)
                                .addGap(27, 27, 27)
                                .addComponent(signOutButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(noCardsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cardsCounterLabel))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardsCounterLabel)
                    .addComponent(noCardsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(signOutButton)
                        .addComponent(nextButton)
                        .addComponent(prevButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addCardButton)
                        .addComponent(removeButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutButtonActionPerformed
        var frame = new HomeFrame();
        frame.setVisible(true);
        
        this.processor.write(MessageType.CLOSE_CONNECTION);
        
        this.dispose();
    }//GEN-LAST:event_signOutButtonActionPerformed

    private void addCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCardButtonActionPerformed
        
        var card = new StoredCard(
            "_", 
            "New Card",
            5, 
            5, 
            5);
        
        this.processor.write(MessageType.ADD_CARD, card.toString());
        this.processor.isSuccess();
        this.currentCardIndex = 0;
        
        fetchDataAndRefreshView();
    }//GEN-LAST:event_addCardButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        this.currentCardIndex++;
        ClampCurrentCardIndex();
        
        refreshView();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        this.currentCardIndex--;
        ClampCurrentCardIndex();
        
        refreshView();
    }//GEN-LAST:event_prevButtonActionPerformed

    private void ClampCurrentCardIndex() {
        if (this.currentCardIndex >= this.cards.size())
            this.currentCardIndex = this.cards.size() - 1;
        
        if (this.currentCardIndex < 0)
            this.currentCardIndex = 0;
    }
    
    private void attackTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attackTFActionPerformed

    private void nameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTFActionPerformed

    private void speedTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_speedTFActionPerformed

    private void healthTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healthTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_healthTFActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        this.processor.write(MessageType.REMOVE_CARD, "id=" + this.cards.get(this.currentCardIndex).Id());
        var isSuccess = this.processor.isSuccess();
        
        fetchDataAndRefreshView();
        
        ShowActionResult(isSuccess, "Removed card");
    }//GEN-LAST:event_removeButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        var card = new StoredCard(
            this.cards.get(this.currentCardIndex).Id(), 
            this.nameTF.getText(),
            Integer.parseInt(this.attackTF.getText()), 
            Integer.parseInt(this.speedTF.getText()), 
            Integer.parseInt(this.healthTF.getText()));
        
        this.processor.write(MessageType.UPDATE_CARD, card.toString());
        var isSuccess = this.processor.isSuccess();
        
        fetchDataAndRefreshView();
        
        ShowActionResult(isSuccess, "Updated card");
    }//GEN-LAST:event_saveButtonActionPerformed

    private void CheckSuccess(String successMessage) {
        ShowActionResult(this.processor.isSuccess(), successMessage);
    }
    
    private void ShowActionResult(boolean result, String successMessage) {
        if (result) {
            this.actionResultLabel.setText(successMessage);
        } else{
            this.actionResultLabel.setText("Error");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actionResultLabel;
    private javax.swing.JButton addCardButton;
    private javax.swing.JLabel attackLabel;
    private javax.swing.JTextField attackTF;
    private javax.swing.JLabel cardsCounterLabel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JTextField healthTF;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel noCardsLabel;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton signOutButton;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JTextField speedTF;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
